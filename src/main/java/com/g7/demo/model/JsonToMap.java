package com.g7.demo.model;

import cn.hutool.json.JSONUtil;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.Data;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * @author 邵海楠
 * @date 2023/11/16 18:10
 * @description
 */
@Data
public class JsonToMap {
    public static void main(String[] args) {
        ArrayList<String> objects = new ArrayList<>();

        String json1 = "{\"spring.datasource.write.url\":\"jdbc:mysql://rm-bp1974ya0y45q9671.mysql.rds.aliyuncs.com:3306/intelli_trailer?useUnicode\\u003dtrue\\u0026characterEncoding\\u003dutf8\\u0026useSSL\\u003dfalse\\u0026allowMultiQueries\\u003dtrue\\u0026zeroDateTimeBehavior\\u003dconvertToNull\\u0026tinyInt1isBit\\u003dfalse\",\"spring.datasource.gto.password\":\"MHz1YJGmymhUG0Y0\",\"spring.redis.database\":\"2\",\"spring.redis.password\":\"KWboR9tNTS8nqG4Y\",\"spring.datasource.read.password\":\"guache_rw@20!(\",\"spring.datasource.read.url\":\"jdbc:mysql://rm-bp1974ya0y45q9671.mysql.rds.aliyuncs.com:3306/intelli_trailer?useUnicode\\u003dtrue\\u0026characterEncoding\\u003dutf8\\u0026useSSL\\u003dfalse\\u0026allowMultiQueries\\u003dtrue\\u0026zeroDateTimeBehavior\\u003dconvertToNull\\u0026tinyInt1isBit\\u003dfalse\",\"spring.redis.host\":\"r-bp1d92b5c065bfa4.redis.rds.aliyuncs.com\",\"spring.datasource.gto.username\":\"g7trailer_rw\",\"spring.datasource.amc.username\":\"g7amc_rw\",\"spring.datasource.amc.url\":\"jdbc:mysql://rm-bp1974ya0y45q9671.mysql.rds.aliyuncs.com:3306/g7amc?useUnicode\\u003dtrue\\u0026characterEncoding\\u003dutf8\\u0026useSSL\\u003dfalse\\u0026allowMultiQueries\\u003dtrue\\u0026zeroDateTimeBehavior\\u003dconvertToNull\\u0026tinyInt1isBit\\u003dfalse\",\"spring.redis.port\":\"6379\",\"spring.datasource.write.username\":\"g7amc_rw\",\"spring.datasource.amc.password\":\"YlME7vXTiao9lmS2\",\"spring.datasource.read.username\":\"guache_rw\",\"spring.datasource.gto.url\":\"jdbc:mysql://rm-bp1974ya0y45q9671.mysql.rds.aliyuncs.com:3306/g7trailer?useUnicode\\u003dtrue\\u0026characterEncoding\\u003dutf8\\u0026useSSL\\u003dfalse\\u0026allowMultiQueries\\u003dtrue\\u0026zeroDateTimeBehavior\\u003dconvertToNull\\u0026tinyInt1isBit\\u003dfalse\",\"spring.datasource.load.password\":\"B3JVaGFdNw90SNZp\",\"spring.datasource.write.password\":\"YlME7vXTiao9lmS2\",\"spring.datasource.load.url\":\"jdbc:mysql://rm-bp1spwv1148p7wx06.mysql.rds.aliyuncs.com:3306/basic_bearing?useUnicode\\u003dtrue\\u0026characterEncoding\\u003dutf8\\u0026useSSL\\u003dfalse\\u0026allowMultiQueries\\u003dtrue\\u0026zeroDateTimeBehavior\\u003dconvertToNull\\u0026tinyInt1isBit\\u003dfalse\",\"spring.datasource.load.username\":\"intellitrailer\"}\n";
        objects.add(json1);
        String json2 = "{\"bucketName\":\"tof-measure-volume\",\"kafka.consumer.auto.offset.reset\":\"latest\",\"spring.datasource.gto.maxActive\":\"20\",\"spring.datasource.amc.maxActive\":\"20\",\"spring.datasource.read.keepAlive\":\"true\",\"spring.datasource.write.minEvictableIdleTimeMillis\":\"300000\",\"spring.datasource.load.minIdle\":\"1\",\"spring.datasource.write.minIdle\":\"1\",\"spring.datasource.load.initialSize\":\"1\",\"eureka.client.instance-info-replication-interval-seconds\":\"24\",\"mybatis.mapper-locations\":\"classpath*:com/chinaway/trailer/kafka/dao/*/*.xml\",\"spring.datasource.write.testWhileIdle\":\"true\",\"kafka.consumer.session.timeout\":\"30000\",\"kafka.producer.batch-size\":\"4096\",\"vega.url\":\"http://vega.chinawayltd.com\",\"pointcouldalgurl\":\"http://tofalg-prod.chinawayltd.com/volume_calc\",\"eureka.client.serviceUrl.defaultZone\":\"http://172.16.24.65:1111/eureka,http://172.16.24.64:1111/eureka\",\"spring.datasource.gto.validationQuery\":\"select 1 from dual\",\"spring.datasource.amc.asyncInit\":\"true\",\"spring.datasource.amc.minEvictableIdleTimeMillis\":\"300000\",\"spring.datasource.load.removeAbandoned\":\"true\",\"spring.datasource.load.minEvictableIdleTimeMillis\":\"300000\",\"spring.datasource.load.testOnReturn\":\"false\",\"spring.application.name\":\"intelli-trailer-kafka-v1\",\"spring.datasource.amc.testOnBorrow\":\"false\",\"loadalgurl\":\"http://loadalg.chinawayltd.com/load_calc\",\"newrate.url\":\"http://alg.chinawayltd.com/calc_s_r_v\",\"spring.datasource.write.maxWait\":\"60000\",\"spring.datasource.amc.initialSize\":\"1\",\"kafka.realm\":\"G7.COM\",\"spring.datasource.amc.removeAbandoned\":\"true\",\"newrateFlag\":\"true\",\"spring.datasource.read.testOnReturn\":\"false\",\"spring.datasource.load.maxWait\":\"60000\",\"scheme\":\"https\",\"dsp.appsecret\":\"8C2DE1ED121DF5EDFA46CB1BB41CD9F5\",\"secondary.hbase.enable\":\"false\",\"hbase.client.username\":\"coldchain\",\"spring.datasource.write.removeAbandonedTimeout\":\"300\",\"endpoint\":\"oss-cn-hangzhou-internal.aliyuncs.com\",\"spring.datasource.read.initialSize\":\"1\",\"tofalgurl\":\"http://test.tofalg.chinawayltd.com/tof_volume_calc\",\"cloud.volume.oss.topic\":\"cloud_volume_oss\",\"server.port\":\"8089\",\"spring.datasource.read.asyncInit\":\"true\",\"spring.datasource.read.maxWait\":\"60000\",\"zookeeper.address.port\":\"2181\",\"dsp.appkey\":\"d027b6\",\"kafka.producer.key-serializer\":\"org.apache.kafka.common.serialization.StringSerializer\",\"spring.datasource.write.maxActive\":\"20\",\"spring.datasource.load.keepAlive\":\"true\",\"primary.time.range\":\"30\",\"spring.datasource.gto.initialSize\":\"1\",\"kafka.cloudvolume.consumer.group.id\":\"trailer-cloudvolume\",\"kafka.principal\":\"intelli-flink@G7.COM\",\"spring.datasource.read.testWhileIdle\":\"true\",\"spring.datasource.gto.asyncInit\":\"true\",\"kafka.sasl.kerberos.service.name\":\"kafka\",\"mybatis.type-aliases-package\":\"com.chinaway.trailer.kafka.model\",\"kafka.producer.value-serializer\":\"org.apache.kafka.common.serialization.StringSerializer\",\"secondary.hbase.zookeeper.quorum\":\"172.16.18.47:2181,172.16.18.48:2181,172.16.18.49:2181\",\"spring.datasource.gto.minEvictableIdleTimeMillis\":\"300000\",\"spring.datasource.write.driverClassName\":\"com.mysql.jdbc.Driver\",\"spring.datasource.amc.testWhileIdle\":\"true\",\"spring.datasource.write.keepAlive\":\"true\",\"zookeeper.address.host\":\"zk1,zk2,zk3,zk4,zk5\",\"kafka.producer.bootstrap-servers\":\"172.16.18.122:9092,172.16.18.123:9092,172.16.18.124:9092,172.16.18.125:9092\",\"spring.datasource.load.maxActive\":\"20\",\"spring.data.mongodb.database\":\"intelli_trailer\",\"spring.datasource.gto.driverClassName\":\"com.mysql.jdbc.Driver\",\"rate.url\":\"http://alg.chinawayltd.com/calc_v\",\"spring.data.mongodb.password\":\"cCSHcEFLci8cqQHN\",\"spring.datasource.gto.timeBetweenEvictionRunsMillis\":\"60000\",\"accessKeyId\":\"LTAI4GHJYzkEtX8uHHfB79yj\",\"truck.whitelist\":\"90270042,90270065,90270068,90270086,90270089,90270097,90270103,90270104,90270106,90270110,90270124,90270132,90270035,90270048,90270113,90270115,90270122,90270123,90270136,90270140,90270119,90270114,90270053,90270088,90270064,90270062,90270121,90270009,90270047,90270109,90270046,90270015,90270032,90270007,90270044,90270069,90270105,90270134,90270037,90270137,90270107,90270040,90270036,90270101,90270020,90270135,90270116,90270034,90270038,90270043,90270138,90270139\",\"spring.datasource.write.asyncInit\":\"true\",\"volumedata.filter.orgcode\":\"2025IY\",\"kafka.producer.retries\":\"0\",\"spring.datasource.amc.maxWait\":\"60000\",\"spring.datasource.read.removeAbandonedTimeout\":\"300\",\"spring.datasource.amc.keepAlive\":\"true\",\"kafka.consumer.group.id\":\"intelli-message_rc\",\"kafka.keyTabHex\":\"05020000003e0001000647372e434f4d000d696e74656c6c692d666c696e6b000000015ad96c730200100018678067cbfbd31637a2ef7f5e010d1c5134b02f91daa898df0000002e0001000647372e434f4d000d696e74656c6c692d666c696e6b000000015ad96c730200010008fbb67c252902a120\",\"kafka.consumer.concurrency\":\"2\",\"spring.datasource.load.removeAbandonedTimeout\":\"300\",\"accessKeySecret\":\"RHSC3mJXya8SyvFYr3BMYg1VVXOGJR\",\"spring.datasource.read.removeAbandoned\":\"true\",\"primary.hbase.zookeeper.quorum\":\"172.16.18.47:2181,172.16.18.48:2181,172.16.18.49:2181\",\"spring.data.mongodb.username\":\"coldchaindb_wr\",\"spring.datasource.write.validationQuery\":\"select 1 from dual\",\"spring.cloud.config.enabled\":\"false\",\"spring.datasource.read.minEvictableIdleTimeMillis\":\"300000\",\"spring.datasource.gto.testWhileIdle\":\"true\",\"spring.datasource.gto.keepAlive\":\"true\",\"spring.datasource.gto.maxWait\":\"60000\",\"spring.datasource.amc.validationQuery\":\"select 1 from dual\",\"hbase.client.password\":\"2iWSqWA2pBTX9I8D\",\"spring.datasource.load.testOnBorrow\":\"false\",\"kafka.consumer.servers\":\"bigdata-kafka-1:9094,bigdata-kafka-2:9094,bigdata-kafka-3:9094,bigdata-kafka-4:9094\",\"vega.accessid\":\"w4xmcci\",\"spring.data.mongodb.port\":\"3717\",\"spring.datasource.amc.testOnReturn\":\"false\",\"eureka.instance.prefer-ip-address\":\"true\",\"dsp.url\":\"http://api.huoyunren.com/router/rest\",\"spring.datasource.write.initialSize\":\"1\",\"spring.datasource.read.minIdle\":\"1\",\"spring.datasource.read.maxActive\":\"20\",\"tofOssUrl\":\"tof-measure-volume.oss-cn-hangzhou.aliyuncs.com\",\"spring.datasource.load.validationQuery\":\"select 1 from dual\",\"spring.datasource.gto.removeAbandonedTimeout\":\"300\",\"spring.datasource.read.testOnBorrow\":\"false\",\"kafka.consumer.heartbeat.interval\":\"10000\",\"kafka.consumer.enable.auto.commit\":\"false\",\"spring.datasource.amc.minIdle\":\"1\",\"kafka.producer.acks\":\"all\",\"spring.datasource.gto.testOnBorrow\":\"false\",\"kafka.kdc\":\"172.16.18.125\",\"spring.datasource.gto.testOnReturn\":\"false\",\"spring.datasource.load.driverClassName\":\"com.mysql.jdbc.Driver\",\"spring.data.mongodb.host\":\"dds-bp190f3e084964941.mongodb.rds.aliyuncs.com\",\"spring.datasource.amc.driverClassName\":\"com.mysql.jdbc.Driver\",\"orgcode.whitelist\":\"0\",\"spring.datasource.load.asyncInit\":\"true\",\"vega.secretkey\":\"CKEtZChbD3YKpSK4X0F5KQfVQkDDBadE\",\"spring.datasource.write.removeAbandoned\":\"true\",\"spring.datasource.gto.removeAbandoned\":\"true\",\"spring.datasource.read.validationQuery\":\"select 1 from dual\",\"spring.datasource.write.timeBetweenEvictionRunsMillis\":\"60000\",\"spring.datasource.amc.removeAbandonedTimeout\":\"300\",\"spring.datasource.write.testOnReturn\":\"false\",\"spring.datasource.gto.minIdle\":\"1\",\"spring.datasource.load.timeBetweenEvictionRunsMillis\":\"60000\",\"spring.datasource.read.timeBetweenEvictionRunsMillis\":\"60000\",\"spring.datasource.write.testOnBorrow\":\"false\",\"spring.datasource.load.testWhileIdle\":\"true\",\"kafka.producer.buffer-memory\":\"40960\",\"spring.datasource.amc.timeBetweenEvictionRunsMillis\":\"60000\",\"spring.datasource.read.driverClassName\":\"com.mysql.jdbc.Driver\",\"kafka.cheguamatch.consumer.group.id\":\"trailer-flink-kafka\"}\n";
        objects.add(json2);
        ObjectMapper mapper = new ObjectMapper();
        LinkedHashMap<Object, Object> objectObjectLinkedHashMap = new LinkedHashMap<>();

        for (String json : objects) {
            try {
                HashMap<String, String> map = mapper.readValue(json, new TypeReference<Map<String, String>>() {
                });
                Map map1 = JsonDataProcessor.fileterMap("", map);
                objectObjectLinkedHashMap.putAll(map1);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        System.out.println(JSONUtil.toJsonPrettyStr(objectObjectLinkedHashMap));

    }
}